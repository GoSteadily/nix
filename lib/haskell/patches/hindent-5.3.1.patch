diff --git a/src/HIndent/Pretty.hs b/src/HIndent/Pretty.hs
index 46d8254..ed32925 100644
--- a/src/HIndent/Pretty.hs
+++ b/src/HIndent/Pretty.hs
@@ -979,25 +979,12 @@ instance Pretty Alt where
 instance Pretty Asst where
   prettyInternal x =
     case x of
-      ClassA _ name types -> spaced (pretty name : map pretty types)
-      i@InfixA {} -> pretty' i
+      TypeA _ ty -> pretty ty
       IParam _ name ty -> do
         pretty name
         write " :: "
         pretty ty
-      EqualP _ a b -> do
-        pretty a
-        write " ~ "
-        pretty b
       ParenA _ asst -> parens (pretty asst)
-      AppA _ name tys ->
-        spaced (pretty name : map pretty tys)
-      WildCardA _ name ->
-        case name of
-          Nothing -> write "_"
-          Just n -> do
-            write "_"
-            pretty n
 
 instance Pretty BangType where
   prettyInternal x =
diff --git a/src/HIndent/Types.hs b/src/HIndent/Types.hs
index 78d1ceb..ad47a5d 100644
--- a/src/HIndent/Types.hs
+++ b/src/HIndent/Types.hs
@@ -71,7 +71,7 @@ data Config = Config
     }
 
 -- | Parse an extension.
-readExtension :: Monad m => String -> m Extension
+readExtension :: (MonadFail m, Monad m) => String -> m Extension
 readExtension x =
   case classifyExtension x -- Foo
        of
